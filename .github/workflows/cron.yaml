name: Daily PostHog Export

on:
  schedule:
    - cron: '0 17 * * *'  # Runs at 9:00 PST every day
  workflow_dispatch:  # Allows manual triggering

permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  export-data:
    runs-on: macos-15
    
    env:
      POSTHOG_API_KEY: ${{ secrets.POSTHOG_API_KEY }}
      POSTHOG_PROJECT_ID: ${{ secrets.POSTHOG_PROJECT_ID }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Build and run analytics package
        run: |
          swift run analytics
        env:
          POSTHOG_API_KEY: ${{ secrets.POSTHOG_API_KEY }}
          POSTHOG_PROJECT_ID: ${{ secrets.POSTHOG_PROJECT_ID }}
          
      - name: Configure Git
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
      - name: Commit and push changes
        run: |
          git add Sources/gensite/
          git commit -m "Update PostHog export data" || echo "No changes to commit"
          git push origin main
          echo "commit_sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

      # Deploy to Jekyll
      - name: Install Tailwind CSS
        run: npm install -D tailwindcss@latest
      - name: Generate site
        run: swift run gensite && npx tailwindcss -i tailwind.css -o ./site/css/main.css --minify
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: './site'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Send Discord notification
        uses: sarisia/actions-status-discord@v1
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_LEADERBOARD_WEBHOOK_URL }}
